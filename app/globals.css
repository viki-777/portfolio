@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  background-color: #fff;
 }

@layer components {
  .heroButton {
    @apply px-6 py-2 mx-1 my-1 sm:my-0 border border-[#242424] rounded-full uppercase text-sm tracking-widest   transition-all hover:border hover:border-solid hover:border-[#10b981]/40 hover:text-[#10b981]/40;
  }
  .contactInput {
    @apply outline-none bg-slate-400/10 rounded-sm border-b px-6 py-4 border-[#242424] 
           text-gray-300 placeholder-gray-400 transition-all 
           focus:border-[#10b981] focus:text-white 
           hover:border-[#10b981]/40
           focus:ring-1 focus:ring-[#10b981]/50
           autofill:bg-[#10b981]/10
           relative z-50;
  }
  
 
 
}

/* css for skills */
/* the important bits */

li {
  perspective: 200px;
}

.info {
  transform: rotate3d(1, 0, 0, 90deg);
  width: 100%;
  height: 100%;
  padding: 20px;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 4px;
  pointer-events: none;
  background-color: rgba(43, 42, 42, 0.879);
  border-radius: 5px;
}

.in-top .info {
  transform-origin: 50% 0%;
  -webkit-animation: in-top 300ms ease 0ms 1 forwards;
  animation: in-top 300ms ease 0ms 1 forwards;
}

.in-right .info {
  transform-origin: 100% 0%;
  -webkit-animation: in-right 300ms ease 0ms 1 forwards;
  animation: in-right 300ms ease 0ms 1 forwards;
}

.in-bottom .info {
  transform-origin: 50% 100%;
  -webkit-animation: in-bottom 300ms ease 0ms 1 forwards;
  animation: in-bottom 300ms ease 0ms 1 forwards;
}

.in-left .info {
  transform-origin: 0% 0%;
  -webkit-animation: in-left 300ms ease 0ms 1 forwards;
  animation: in-left 300ms ease 0ms 1 forwards;
}

.out-top .info {
  transform-origin: 50% 0%;
  -webkit-animation: out-top 300ms ease 0ms 1 forwards;
  animation: out-top 300ms ease 0ms 1 forwards;
}

.out-right .info {
  transform-origin: 100% 50%;
  -webkit-animation: out-right 300ms ease 0ms 1 forwards;
  animation: out-right 300ms ease 0ms 1 forwards;
}

.out-bottom .info {
  transform-origin: 50% 100%;
  -webkit-animation: out-bottom 300ms ease 0ms 1 forwards;
  animation: out-bottom 300ms ease 0ms 1 forwards;
}

.out-left .info {
  transform-origin: 0% 0%;
  -webkit-animation: out-left 300ms ease 0ms 1 forwards;
  animation: out-left 300ms ease 0ms 1 forwards;
}

@-webkit-keyframes in-top {
  from {
    transform: rotate3d(-1, 0, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}

@keyframes in-top {
  from {
    transform: rotate3d(-1, 0, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}
@-webkit-keyframes in-right {
  from {
    transform: rotate3d(0, -1, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}
@keyframes in-right {
  from {
    transform: rotate3d(0, -1, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}
@-webkit-keyframes in-bottom {
  from {
    transform: rotate3d(1, 0, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}
@keyframes in-bottom {
  from {
    transform: rotate3d(1, 0, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}
@-webkit-keyframes in-left {
  from {
    transform: rotate3d(0, 1, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}
@keyframes in-left {
  from {
    transform: rotate3d(0, 1, 0, 90deg);
  }
  to {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}
@-webkit-keyframes out-top {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(-1, 0, 0, 104deg);
  }
}
@keyframes out-top {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(-1, 0, 0, 104deg);
  }
}
@-webkit-keyframes out-right {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(0, -1, 0, 104deg);
  }
}
@keyframes out-right {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(0, -1, 0, 104deg);
  }
}
@-webkit-keyframes out-bottom {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(1, 0, 0, 104deg);
  }
}
@keyframes out-bottom {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(1, 0, 0, 104deg);
  }
}
@-webkit-keyframes out-left {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(0, 1, 0, 104deg);
  }
}
@keyframes out-left {
  from {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  to {
    transform: rotate3d(0, 1, 0, 104deg);
  }
}

ul {
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}
ul:after {
  content: "";
  display: table;
  clear: both;
}

li {
  position: relative;
  float: left;
  width: 100px;
  height: 100px;
  margin: 5px;
  padding: 0;
  list-style: none;
}
li a {
  display: inline-block;
  vertical-align: top;
  text-decoration: none;
  border-radius: 4px;
}
li h3 {
  font-size: 4rem;
  font-family: Impact, Haettenschweiler, "Arial Narrow Bold", sans-serif;
  text-align: center;
  color: #10b981;
}
li p {
  font-size: 12px;
  line-height: 1.5;
  color: rgba(255, 255, 255, 0.8);
}
li .normal {
  width: 100%;
  height: 100%;
  background-color: #ecf0f1;
  color: rgba(52, 73, 94, 0.6);
  box-shadow: inset 0 2px 20px #e6ebed;
  text-align: center;
  font-size: 50px;
  line-height: 200px;
  border-radius: 6px;
}
li .normal img {
  pointer-events: none;
  width: 50px;
  border-radius: 5px;
  object-fit: cover;
}
li .normal svg path {
  fill: rgba(52, 73, 94, 0.2);
}

* {
  box-sizing: border-box;
}

h1 {
  margin: 0 auto 5px;
  text-align: center;
}

header {
  text-align: center;
  margin: 50px 0 25px;
  color: #34495e;
}
header p {
  margin: 0;
  color: rgba(52, 73, 94, 0.4);
}


/* components/GradientBackground.module.css */
.gradientContainer {
  position: relative;
  min-height: 100vh;
  width: 100%;
  background: radial-gradient(ellipse at top, #064e3b 0%, #0f172a 50%, #000000 100%);
  overflow: hidden;
}

.gradientOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 50%, rgba(52, 211, 153, 0.15) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(16, 185, 129, 0.12) 0%, transparent 50%),
    radial-gradient(circle at 40% 80%, rgba(5, 150, 105, 0.1) 0%, transparent 50%);
  z-index: 1;
}

.flowingCurves {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
}

.curve1 {
  position: absolute;
  top: 20%;
  right: -10%;
  width: 800px;
  height: 400px;
  background: linear-gradient(
    135deg,
    rgba(52, 211, 153, 0.3) 0%,
    rgba(16, 185, 129, 0.2) 50%,
    transparent 100%
  );
  border-radius: 50%;
  filter: blur(40px);
  animation: float1 20s ease-in-out infinite;
}

.curve2 {
  position: absolute;
  bottom: 10%;
  left: -15%;
  width: 600px;
  height: 600px;
  background: linear-gradient(
    45deg,
    rgba(5, 150, 105, 0.25) 0%,
    rgba(52, 211, 153, 0.15) 50%,
    transparent 100%
  );
  border-radius: 50%;
  filter: blur(60px);
  animation: float2 25s ease-in-out infinite;
}

.curve3 {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 400px;
  height: 800px;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(16, 185, 129, 0.2) 50%,
    transparent 100%
  );
  border-radius: 50%;
  filter: blur(80px);
  animation: float3 30s ease-in-out infinite;
}

.content {
  position: relative;
  z-index: 10;
  width: 100%;
  height: 100%;
}

/* Animations for flowing effect */
@keyframes float1 {
  0%, 100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-30px) translateX(20px) rotate(5deg);
  }
  66% {
    transform: translateY(20px) translateX(-15px) rotate(-3deg);
  }
}

@keyframes float2 {
  0%, 100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  50% {
    transform: translateY(40px) translateX(30px) rotate(10deg);
  }
}

@keyframes float3 {
  0%, 100% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  33% {
    transform: translate(-50%, -60%) rotate(15deg);
  }
  66% {
    transform: translate(-50%, -40%) rotate(-10deg);
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .curve1 {
    width: 400px;
    height: 200px;
    top: 10%;
    right: -20%;
  }
  
  .curve2 {
    width: 300px;
    height: 300px;
    bottom: 5%;
    left: -25%;
  }
  
  .curve3 {
    width: 200px;
    height: 400px;
  }
}

/* Add this to your global CSS or component styles */
.heroButton {
  @apply px-6 py-3 border border-emerald-500/50 rounded-full uppercase text-xs tracking-widest text-gray-200 transition-all hover:border-emerald-400 hover:text-white hover:bg-emerald-600/20 backdrop-blur-sm bg-black/20 mx-2 my-1;
}

.heroButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px rgba(52, 211, 153, 0.3);
}

/* Alternative modern glassmorphism style with emerald theme */
.heroButton-glass {
  @apply px-6 py-3 border border-emerald-400/30 rounded-full uppercase text-xs tracking-widest text-white transition-all hover:border-emerald-400/60 hover:bg-emerald-400/10 backdrop-blur-md bg-white/5 mx-2 my-1;
}

.heroButton-glass:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 32px rgba(52, 211, 153, 0.2);
}